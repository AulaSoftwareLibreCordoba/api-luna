name: Docker Deploy

on:
  push:
    branches:
      - master  # Cambia esto a la rama que prefieras

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: Build Docker image
      run: |
        docker build -t my-image:${{ github.sha }} .

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Transfer Docker image to server
      env:
        SERVER_HOST: ${{ secrets.SERVER_HOST }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
        SERVER_SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}
      run: |
        # Guarda la imagen como tar
        docker save my-image:${{ github.sha }} | gzip > my-image.tar.gz
        
        # Conecta al servidor y transfiere la imagen
        scp -i $SERVER_SSH_KEY -o StrictHostKeyChecking=no my-image.tar.gz $SERVER_USER@$SERVER_HOST:/tmp/my-image.tar.gz
        
        # Con√©ctate al servidor para cargar y ejecutar la imagen
        ssh -i $SERVER_SSH_KEY -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST << 'EOF'
          # Cargar la imagen desde el tar.gz
          gunzip -c /tmp/my-image.tar.gz | docker load

          # Detener y eliminar el contenedor existente
          docker stop my-container || true
          docker rm my-container || true

          # Ejecutar el nuevo contenedor
          docker run -d --name my-container my-image:latest
        EOF
